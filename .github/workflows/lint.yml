name: Lint Terraform

on:
  push:
    branches:
      - main
      - master
      - production
      - staging
  pull_request:
    branches:
      - main
      - master
      - production
      - staging
  workflow_dispatch:

jobs:
  terraform-lint:
    if: github.actor != 'github-actions[bot]'
    name: Terraform Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "~1.5.0"

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Init
        run: terraform init -backend=false

      - name: Terraform Validate
        run: terraform validate


  team-sync:
    name: Generate Team Members Template
    runs-on: ubuntu-latest
    needs: terraform-lint
    if: github.actor != 'github-actions[bot]'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Check for teams configuration changes
        id: check-changes
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -E "(teams\.tfvars\.json|teams\.tf)$"; then
            echo "teams_changed=true" >> $GITHUB_OUTPUT
          else
            echo "teams_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Make All scripts executable
        run: |
          chmod +x ./scripts/*.sh

      - name: Generate team members template
        if: steps.check-changes.outputs.teams_changed == 'true'
        run: |
          ./scripts/generate_teams.sh

      - name: Check if team members file was generated
        if: steps.check-changes.outputs.teams_changed == 'true'
        id: check-generated
        run: |
          if [ -f "team_members.tfvars.json" ]; then
            echo "file_generated=true" >> $GITHUB_OUTPUT
          else
            echo "file_generated=false" >> $GITHUB_OUTPUT
          fi

      - name: Show generated file content
        if: steps.check-changes.outputs.teams_changed == 'true' && steps.check-generated.outputs.file_generated == 'true'
        run: |
          echo "Generated team members template:"
          cat team_members.tfvars.json

      - name: Configure Git
        if: steps.check-changes.outputs.teams_changed == 'true' && steps.check-generated.outputs.file_generated == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Commit and push changes
        if: contains(github.event.head_commit.message, '[team-sync]') || github.event_name == 'pull_request' || github.actor != 'github-actions[bot]'

        run: |
          git add team_members.tfvars.json
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Auto-generate team members template [skip ci]

            - Generated from teams.tfvars.json changes
            - Ready for team membership population
            - Triggered by commit: ${{ github.sha }}"
            git push
          fi
      - name: Notify if no changes
        if: steps.check-changes.outputs.teams_changed == 'false' || steps.check-generated.outputs.file_generated == 'false'
        run: echo "No changes detected in teams configuration or team members file not generated."
      
      - name: Check member status
        run: |
          ./scripts/check_member.sh


                  
  team-sync-manual:
    name: Manual Team Sync Trigger
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Make script executable
        run: |
          chmod +x ./scripts/generate_teams.sh 
          chmod +x ./scripts/check_member.sh

      - name: Generate team members template
        run: |
          ./scripts/generate_teams.sh

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Commit and push changes
        run: |
          git add team_members.tfvars.json
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Manual team members template generation

            - Generated via workflow dispatch
            - Ready for team membership population"
            git push
